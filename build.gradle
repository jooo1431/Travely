buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath ('org.asciidoctor:asciidoctor-gradle-plugin:1.5.2')
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.2"
}

task wrapper(type: Wrapper){
    gradleVersion = '4.5.1'
}


//apply plugin: 'org.asciidoctor.convert'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.travely'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8



repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-milestone' }
}


dependencies {
    implementation('io.springfox:springfox-swagger2:+')
    implementation('io.springfox:springfox-swagger-ui:+')
    implementation('org.springframework.cloud:spring-cloud-starter-aws')
    runtime('org.springframework.boot:spring-boot-devtools')
    implementation('org.springframework.boot:spring-boot-starter-security')
    compile('com.google.code.gson:gson:+')

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
    runtimeOnly('mysql:mysql-connector-java:+')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
    implementation('com.auth0:java-jwt:3.3.0')


    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    runtimeOnly('com.h2database:h2')
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    //implementation('org.springframework.boot:spring-boot-starter-hateoas')
    
}


ext {  snippetsDir = file('build/generated-snippets') }

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}


bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

//////////////////////////////////////


//eclipseJdt.onlyIf { false }
//cleanEclipseJdt.onlyIf { false }

////////////////////

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-aws:2.0.0.RC2'
    }
}
